{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\nexport const fetchWeather = createAsyncThunk('todos/fetch', async (_, _ref) => {\n  let {\n    rejectWithValue\n  } = _ref;\n  const res = await axios.get(`https://631f574722cefb1edc498d47.mockapi.io/items?limit=4`);\n  console.log(res.statusText);\n  console.log(res.statusText);\n  if (res.data.length === 0) return rejectWithValue('Failed to fetch todos.');\n  return res.data;\n});\nconst initialState = {\n  value: 0\n};\nexport const counterSlice = createSlice({\n  name: 'weather',\n  initialState,\n  reducers: {\n    changeIncrementAmount: (state, action) => {}\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchWeather.fulfilled, (state, action) => {\n      console.log(action.payload);\n    }).addCase(fetchWeather.rejected, (state, action) => {\n      console.log(action.payload);\n    });\n  }\n});\nexport const {\n  changeIncrementAmount\n} = counterSlice.actions;\nexport default counterSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","fetchWeather","_","_ref","rejectWithValue","res","get","console","log","statusText","data","length","initialState","value","counterSlice","name","reducers","changeIncrementAmount","state","action","extraReducers","builder","addCase","fulfilled","payload","rejected","actions","reducer"],"sources":["/Users/vladislavdisackij/Documents/GitHub/react-ts-weather/src/store/slice/WeatherApiSlice.ts"],"sourcesContent":["import { createSlice, PayloadAction, createAsyncThunk } from '@reduxjs/toolkit'\nimport axios from 'axios'\n\nexport interface CounterState {\n  value: number\n}\ntype WeatherInf = {\n  message: string\n}\n\nexport const fetchWeather = createAsyncThunk<\n  WeatherInf,\n  undefined,\n  { rejectValue: string }\n>(\n  'todos/fetch',\n\n  async (_, { rejectWithValue }) => {\n    const res = await axios.get(\n      `https://631f574722cefb1edc498d47.mockapi.io/items?limit=4`\n    )\n    console.log(res.statusText)\n    console.log(res.statusText)\n    if (res.data.length === 0) return rejectWithValue('Failed to fetch todos.')\n    return res.data\n  }\n)\n\nconst initialState: CounterState = {\n  value: 0,\n}\n\nexport const counterSlice = createSlice({\n  name: 'weather',\n  initialState,\n  reducers: {\n    changeIncrementAmount: (state, action: PayloadAction<number>) => {},\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchWeather.fulfilled, (state, action) => {\n        console.log(action.payload)\n      })\n      .addCase(fetchWeather.rejected, (state, action) => {\n        console.log(action.payload)\n      })\n  },\n})\n\nexport const { changeIncrementAmount } = counterSlice.actions\n\nexport default counterSlice.reducer\n"],"mappings":"AAAA,SAASA,WAAW,EAAiBC,gBAAgB,QAAQ,kBAAkB;AAC/E,OAAOC,KAAK,MAAM,OAAO;AASzB,OAAO,MAAMC,YAAY,GAAGF,gBAAgB,CAK1C,aAAa,EAEb,OAAOG,CAAC,EAAAC,IAAA,KAA0B;EAAA,IAAxB;IAAEC;EAAgB,CAAC,GAAAD,IAAA;EAC3B,MAAME,GAAG,GAAG,MAAML,KAAK,CAACM,GAAG,CACxB,2DAA0D,CAC5D;EACDC,OAAO,CAACC,GAAG,CAACH,GAAG,CAACI,UAAU,CAAC;EAC3BF,OAAO,CAACC,GAAG,CAACH,GAAG,CAACI,UAAU,CAAC;EAC3B,IAAIJ,GAAG,CAACK,IAAI,CAACC,MAAM,KAAK,CAAC,EAAE,OAAOP,eAAe,CAAC,wBAAwB,CAAC;EAC3E,OAAOC,GAAG,CAACK,IAAI;AACjB,CAAC,CACF;AAED,MAAME,YAA0B,GAAG;EACjCC,KAAK,EAAE;AACT,CAAC;AAED,OAAO,MAAMC,YAAY,GAAGhB,WAAW,CAAC;EACtCiB,IAAI,EAAE,SAAS;EACfH,YAAY;EACZI,QAAQ,EAAE;IACRC,qBAAqB,EAAEA,CAACC,KAAK,EAAEC,MAA6B,KAAK,CAAC;EACpE,CAAC;EACDC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAACrB,YAAY,CAACsB,SAAS,EAAE,CAACL,KAAK,EAAEC,MAAM,KAAK;MAClDZ,OAAO,CAACC,GAAG,CAACW,MAAM,CAACK,OAAO,CAAC;IAC7B,CAAC,CAAC,CACDF,OAAO,CAACrB,YAAY,CAACwB,QAAQ,EAAE,CAACP,KAAK,EAAEC,MAAM,KAAK;MACjDZ,OAAO,CAACC,GAAG,CAACW,MAAM,CAACK,OAAO,CAAC;IAC7B,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEP;AAAsB,CAAC,GAAGH,YAAY,CAACY,OAAO;AAE7D,eAAeZ,YAAY,CAACa,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}